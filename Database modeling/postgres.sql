-- MySQL Script generated by MySQL Workbench
-- Sun Apr 18 20:36:48 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering


-- -----------------------------------------------------
-- Schema rpgdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema rpgdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS  rpgdb  ;

-- -----------------------------------------------------
-- Table "rpgdb"."teams"
-- -----------------------------------------------------
CREATE TABLE  rpgdb.teams (
  id SERIAL NOT NULL,
  team_name VARCHAR(45) NOT NULL,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id));


-- -----------------------------------------------------
-- Table "rpgdb"."players"
-- -----------------------------------------------------
CREATE TYPE STATUS AS ENUM('online', 'offline', 'iaway');

CREATE TABLE  rpgdb.players (
  "id" SERIAL NOT NULL,
  "login" VARCHAR(45) NOT NULL,
  "password" VARCHAR(255) NOT NULL,
  "status" STATUS NOT NULL DEFAULT 'offline',
  "email" VARCHAR(255) NULL,
  "google_id" VARCHAR(255) NULL,
  "facebook_id" VARCHAR(255) NULL,
  "team_id" INT NULL ,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  "deleted_at" TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "team_id_fk"
    FOREIGN KEY ("team_id")
    REFERENCES "rpgdb"."teams" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);;


-- -----------------------------------------------------
-- Table "rpgdb"."classes"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."classes" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "hp_multiplier" DECIMAL  NOT NULL DEFAULT 1 CHECK(hp_multiplier > 0),
  "mp_multiplier" DECIMAL  NOT NULL DEFAULT 1 CHECK(mp_multiplier > 0),
  "attack_multiplier" DECIMAL  NOT NULL DEFAULT 1 CHECK(attack_multiplier > 0),
  "defense_multiplier" DECIMAL  NOT NULL DEFAULT 1 CHECK(defense_multiplier > 0),
  PRIMARY KEY ("id"));


-- -----------------------------------------------------
-- Table "rpgdb"."areas"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."areas" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "required_level" INT  NOT NULL DEFAULT 1 CHECK(required_level > 0),
  PRIMARY KEY ("id"));


-- -----------------------------------------------------
-- Table "rpgdb"."map_points"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."map_points" (
  "id" SERIAL NOT NULL,
  "area_id" INT NOT NULL,
  "name" VARCHAR(45) NULL,
  "x_position" INT NOT NULL,
  "y_position" INT NOT NULL,
  PRIMARY KEY ("id"),
  CONSTRAINT "area_id_fk"
    FOREIGN KEY ("area_id")
    REFERENCES "rpgdb"."areas" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."characters"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."characters" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "class_id" INT NOT NULL,
  "level" INT  NOT NULL DEFAULT 1 CHECK(level > 0),
  "exp" INT  NOT NULL DEFAULT 0 CHECK(exp >= 0),
  "base_health_points" INT  NOT NULL CHECK(base_health_points > 0),
  "base_mana_points" INT  NOT NULL CHECK(base_mana_points > 0),
  "health_points" INT  NOT NULL CHECK(health_points >= 0),
  "mana_points" INT  NOT NULL CHECK(mana_points >= 0),
  "attack" INT  NOT NULL CHECK(attack > 0),
  "defense" INT  NOT NULL CHECK(defense > 0),
  "player_id" INT NOT NULL,
  "map_point_id" INT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "deleted_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "class_id_fk"
    FOREIGN KEY ("class_id")
    REFERENCES "rpgdb"."classes" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "map_point_id_fk"
    FOREIGN KEY ("map_point_id")
    REFERENCES "rpgdb"."map_points" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "player_id_fk"
    FOREIGN KEY ("player_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."player_friend_list"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."player_friend_list" (
  "player_id" INT NOT NULL,
  "friend_id" INT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "player_id_fk"
    FOREIGN KEY ("player_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "friend_id_fk"
    FOREIGN KEY ("friend_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."player_ignore_list"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."player_ignore_list" (
  "player_id" INT NOT NULL,
  "ignored_id" INT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "player_id_fk"
    FOREIGN KEY ("player_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "ignored_id_fk"
    FOREIGN KEY ("ignored_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."player_invitations"
-- -----------------------------------------------------
CREATE TYPE STATUS2 AS ENUM('accepted', 'pending', 'denied');
CREATE TYPE STATUS3 AS ENUM('friend', 'team');

CREATE TABLE  "rpgdb"."player_invitations" (
  "reciever_id" INT NOT NULL,
  "sender_id" INT NOT NULL,
  "status" STATUS2 NOT NULL DEFAULT 'pending',
  "type" STATUS3 NOT NULL DEFAULT 'friend',
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "reciever_login_fk"
    FOREIGN KEY ("reciever_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "sender_login_fk"
    FOREIGN KEY ("sender_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."levels"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."levels" (
  "id" SERIAL NOT NULL,
  "exp_to_achieve" INT NOT NULL CHECK(exp_to_achieve > 0),
  PRIMARY KEY ("id"));


-- -----------------------------------------------------
-- Table "rpgdb"."player_messages"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."player_messages" (
  "sender_id" INT NOT NULL,
  "reciever_id" INT NOT NULL,
  "content" TEXT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "sender_id_fk"
    FOREIGN KEY ("sender_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "reciever_id_fk"
    FOREIGN KEY ("reciever_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."mobs"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."mobs" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "boss" BOOLEAN NOT NULL DEFAULT false,
  "base_health_points" INT  NOT NULL CHECK(base_health_points > 0),
  "base_attack" INT  NOT NULL CHECK(base_attack > 0),
  "base_defense" INT  NOT NULL CHECK(base_defense > 0),
  "base_exp_reward" INT  NOT NULL CHECK(base_exp_reward > 0),
  PRIMARY KEY ("id"));


-- -----------------------------------------------------
-- Table "rpgdb"."spells"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."spells" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "mana_cost" INT  NOT NULL DEFAULT 0 CHECK(mana_cost >= 0),
  "required_level" INT  NOT NULL DEFAULT 1 CHECK(required_level > 0),
  "class_id" INT NULL,
  PRIMARY KEY ("id"),
  CONSTRAINT "class_id_fk"
    FOREIGN KEY ("class_id")
    REFERENCES "rpgdb"."classes" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."combat_log"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."combat_log" (
  "id" SERIAL NOT NULL,
  "character_id" INT NOT NULL,
  "character_health_points" INT  NOT NULL CHECK(character_health_points >= 0),
  "oponent_health_points" INT  NOT NULL CHECK(oponent_health_points >= 0),
  "oponent_mob_id" INT NULL,
  "oponent_character_id" INT NULL,
  "spell_id" INT NULL,
  "damage_dealt" INT  NULL CHECK(damage_dealt >= 0),
  "damage_taken" INT  NULL CHECK(damage_taken >= 0),
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "oponent_mob_id_fk"
    FOREIGN KEY ("oponent_mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "oponent_character_id_fk"
    FOREIGN KEY ("oponent_character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "spell_id_fk"
    FOREIGN KEY ("spell_id")
    REFERENCES "rpgdb"."spells" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."character_spells"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."character_spells" (
  "character_id" INT NOT NULL,
  "spell_id" INT NOT NULL,
  "spell_level" INT  NOT NULL DEFAULT 1 CHECK(spell_level > 0),
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "spell_id_fk"
    FOREIGN KEY ("spell_id")
    REFERENCES "rpgdb"."spells" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."item_types"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."item_types" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "equippable" BOOLEAN NOT NULL DEFAULT false,
  PRIMARY KEY ("id"));


-- -----------------------------------------------------
-- Table "rpgdb"."items"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."items" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "type_id" INT NOT NULL,
  "health_boost" INT  NULL CHECK(health_boost >= 0),
  "mana_boost" INT  NULL CHECK(mana_boost >= 0),
  "attack_boost" INT  NULL CHECK(attack_boost >= 0),
  "defense_boost" INT  NULL CHECK(defense_boost >= 0),
  PRIMARY KEY ("id"),
  CONSTRAINT "item_types_fk"
    FOREIGN KEY ("type_id")
    REFERENCES "rpgdb"."item_types" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."quests"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."quests" (
  "id" SERIAL NOT NULL,
  "name" VARCHAR(45) NOT NULL,
  "description" TEXT NULL,
  "required_level" INT  NOT NULL DEFAULT 1 CHECK(required_level > 0),
  "start_point_id" INT NOT NULL,
  "exp_reward" INT  NOT NULL CHECK(exp_reward > 0),
  "item_reward_id" INT NULL,
  PRIMARY KEY ("id"),
  CONSTRAINT "start_point_id_fk"
    FOREIGN KEY ("start_point_id")
    REFERENCES "rpgdb"."map_points" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "item_reward_id_fk"
    FOREIGN KEY ("item_reward_id")
    REFERENCES "rpgdb"."items" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."quest_objectives"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."quest_objectives" (
  "id" SERIAL NOT NULL,
  "quest_id" INT NOT NULL,
  "mob_id" INT NULL,
  "item_id" INT NULL,
  "amount" INT NOT NULL DEFAULT 1 CHECK(amount > 0),
  PRIMARY KEY ("id"),
  CONSTRAINT "item_id_fk"
    FOREIGN KEY ("item_id")
    REFERENCES "rpgdb"."items" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "mob_id_fk"
    FOREIGN KEY ("mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "quest_id_fk"
    FOREIGN KEY ("quest_id")
    REFERENCES "rpgdb"."quests" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."character_progress"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."character_progress" (
  "character_id" INT NOT NULL,
  "objective_id" INT NOT NULL,
  "amount" INT NOT NULL DEFAULT 0 CHECK(amount >= 0),
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "objective_id_fk"
    FOREIGN KEY ("objective_id")
    REFERENCES "rpgdb"."quest_objectives" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."character_items"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."character_items" (
  "character_id" INT NOT NULL,
  "item_id" INT NOT NULL,
  "amount" INT  NOT NULL DEFAULT 1 CHECK(amount > 0),
  "equipped" BOOLEAN NOT NULL DEFAULT false,
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "item_id_fk"
    FOREIGN KEY ("item_id")
    REFERENCES "rpgdb"."items" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."loot_items"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."loot_items" (
  "mob_id" INT NOT NULL,
  "item_id" INT NOT NULL,
  "max_amount" INT  NULL CHECK(max_amount > 0),
  CONSTRAINT "mob_id_fk"
    FOREIGN KEY ("mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "item_id_fk"
    FOREIGN KEY ("item_id")
    REFERENCES "rpgdb"."items" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."death_log"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."death_log" (
  "id" SERIAL NOT NULL,
  "character_id" INT NOT NULL,
  "oponent_mob_id" INT NULL,
  "oponent_character_id" INT NULL,
  "map_point_id" INT NOT NULL,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "oponent_mob_id_fk"
    FOREIGN KEY ("oponent_mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "oponent_character_id_fk"
    FOREIGN KEY ("oponent_character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "map_point_id_fk"
    FOREIGN KEY ("map_point_id")
    REFERENCES "rpgdb"."map_points" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."exp_log"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."exp_log" (
  "id" SERIAL NOT NULL,
  "character_id" INT NOT NULL,
  "killed_character_id" INT NULL,
  "killed_mob_id" INT NULL,
  "quest_id" INT NULL,
  "exp_points" INT  NOT NULL CHECK(exp_points > 0),
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "killed_character_id_fk"
    FOREIGN KEY ("killed_character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "killed_mob_id_fk"
    FOREIGN KEY ("killed_mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "quest_id_fk"
    FOREIGN KEY ("quest_id")
    REFERENCES "rpgdb"."quests" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."spawned_mobs"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."spawned_mobs" (
  "id" SERIAL NOT NULL,
  "mob_id" INT NOT NULL,
  "character_id" INT NOT NULL,
  "map_point_id" INT NOT NULL,
  "level" INT  NOT NULL CHECK(level > 0),
  "base_health_points" INT  NOT NULL CHECK(base_health_points > 0),
  "health_points" INT  NOT NULL CHECK(health_points >= 0),
  "attack" INT  NOT NULL CHECK(attack > 0),
  "defense" INT  NOT NULL CHECK(defense > 0),
  "exp_reward" INT  NOT NULL CHECK(exp_reward > 0),
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY ("id"),
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "mob_id_fk"
    FOREIGN KEY ("mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "map_point_id_fk"
    FOREIGN KEY ("map_point_id")
    REFERENCES "rpgdb"."map_points" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."previous_spells"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."previous_spells" (
  "spell_id" INT NOT NULL,
  "previous_spell_id" INT NOT NULL,
  CONSTRAINT "spell_id"
    FOREIGN KEY ("spell_id")
    REFERENCES "rpgdb"."spells" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "previous_spell_id"
    FOREIGN KEY ("previous_spell_id")
    REFERENCES "rpgdb"."spells" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."team_messages"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."team_messages" (
  "sender_id" INT NOT NULL,
  "team_id" INT NOT NULL,
  "content" TEXT NOT NULL CHECK(length(content) > 0),
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "sender_id_fk"
    FOREIGN KEY ("sender_id")
    REFERENCES "rpgdb"."players" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "team_id_fk"
    FOREIGN KEY ("team_id")
    REFERENCES "rpgdb"."teams" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."spawn_requirements"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."spawn_requirements" (
  "mob_id" SERIAL NOT NULL,
  "quest_id" INT NOT NULL,
  "previous_mob_id" INT NOT NULL,
  "required_level" INT  NOT NULL DEFAULT 1 CHECK(required_level > 0),
  CONSTRAINT "mob_id_fk"
    FOREIGN KEY ("mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "quest_id_fk"
    FOREIGN KEY ("quest_id")
    REFERENCES "rpgdb"."quests" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "previous_mob_id_fk"
    FOREIGN KEY ("previous_mob_id")
    REFERENCES "rpgdb"."mobs" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table "rpgdb"."character_quests"
-- -----------------------------------------------------
CREATE TABLE  "rpgdb"."character_quests" (
  "character_id" INT NOT NULL,
  "quest_id" INT NOT NULL,
  "completed" BOOLEAN NOT NULL DEFAULT false,
  "created_at" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT "character_id_fk"
    FOREIGN KEY ("character_id")
    REFERENCES "rpgdb"."characters" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT "quest_id_fk"
    FOREIGN KEY ("quest_id")
    REFERENCES "rpgdb"."quests" ("id")
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);